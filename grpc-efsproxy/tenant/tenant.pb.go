// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tenant.proto

package tenant

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GenericResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenericResponse) Reset()         { *m = GenericResponse{} }
func (m *GenericResponse) String() string { return proto.CompactTextString(m) }
func (*GenericResponse) ProtoMessage()    {}
func (*GenericResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d6a2cff6c84df7e, []int{0}
}

func (m *GenericResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenericResponse.Unmarshal(m, b)
}
func (m *GenericResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenericResponse.Marshal(b, m, deterministic)
}
func (m *GenericResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenericResponse.Merge(m, src)
}
func (m *GenericResponse) XXX_Size() int {
	return xxx_messageInfo_GenericResponse.Size(m)
}
func (m *GenericResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GenericResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GenericResponse proto.InternalMessageInfo

type BucketCreateRequest struct {
	Cluster              string            `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Tenant               string            `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Bucket               string            `protobuf:"bytes,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Options              map[string]string `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *BucketCreateRequest) Reset()         { *m = BucketCreateRequest{} }
func (m *BucketCreateRequest) String() string { return proto.CompactTextString(m) }
func (*BucketCreateRequest) ProtoMessage()    {}
func (*BucketCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d6a2cff6c84df7e, []int{1}
}

func (m *BucketCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BucketCreateRequest.Unmarshal(m, b)
}
func (m *BucketCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BucketCreateRequest.Marshal(b, m, deterministic)
}
func (m *BucketCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BucketCreateRequest.Merge(m, src)
}
func (m *BucketCreateRequest) XXX_Size() int {
	return xxx_messageInfo_BucketCreateRequest.Size(m)
}
func (m *BucketCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BucketCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BucketCreateRequest proto.InternalMessageInfo

func (m *BucketCreateRequest) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *BucketCreateRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *BucketCreateRequest) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *BucketCreateRequest) GetOptions() map[string]string {
	if m != nil {
		return m.Options
	}
	return nil
}

type BucketDeleteRequest struct {
	Cluster              string   `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Tenant               string   `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Bucket               string   `protobuf:"bytes,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BucketDeleteRequest) Reset()         { *m = BucketDeleteRequest{} }
func (m *BucketDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*BucketDeleteRequest) ProtoMessage()    {}
func (*BucketDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d6a2cff6c84df7e, []int{2}
}

func (m *BucketDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BucketDeleteRequest.Unmarshal(m, b)
}
func (m *BucketDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BucketDeleteRequest.Marshal(b, m, deterministic)
}
func (m *BucketDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BucketDeleteRequest.Merge(m, src)
}
func (m *BucketDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_BucketDeleteRequest.Size(m)
}
func (m *BucketDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BucketDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BucketDeleteRequest proto.InternalMessageInfo

func (m *BucketDeleteRequest) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *BucketDeleteRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *BucketDeleteRequest) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

type BucketListRequest struct {
	Cluster              string   `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Tenant               string   `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Pattern              string   `protobuf:"bytes,3,opt,name=pattern,proto3" json:"pattern,omitempty"`
	Count                int32    `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BucketListRequest) Reset()         { *m = BucketListRequest{} }
func (m *BucketListRequest) String() string { return proto.CompactTextString(m) }
func (*BucketListRequest) ProtoMessage()    {}
func (*BucketListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d6a2cff6c84df7e, []int{3}
}

func (m *BucketListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BucketListRequest.Unmarshal(m, b)
}
func (m *BucketListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BucketListRequest.Marshal(b, m, deterministic)
}
func (m *BucketListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BucketListRequest.Merge(m, src)
}
func (m *BucketListRequest) XXX_Size() int {
	return xxx_messageInfo_BucketListRequest.Size(m)
}
func (m *BucketListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BucketListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BucketListRequest proto.InternalMessageInfo

func (m *BucketListRequest) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *BucketListRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *BucketListRequest) GetPattern() string {
	if m != nil {
		return m.Pattern
	}
	return ""
}

func (m *BucketListRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type BucketInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BucketInfo) Reset()         { *m = BucketInfo{} }
func (m *BucketInfo) String() string { return proto.CompactTextString(m) }
func (*BucketInfo) ProtoMessage()    {}
func (*BucketInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d6a2cff6c84df7e, []int{4}
}

func (m *BucketInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BucketInfo.Unmarshal(m, b)
}
func (m *BucketInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BucketInfo.Marshal(b, m, deterministic)
}
func (m *BucketInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BucketInfo.Merge(m, src)
}
func (m *BucketInfo) XXX_Size() int {
	return xxx_messageInfo_BucketInfo.Size(m)
}
func (m *BucketInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BucketInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BucketInfo proto.InternalMessageInfo

func (m *BucketInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type BucketListResponse struct {
	Info                 map[string]*BucketInfo `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *BucketListResponse) Reset()         { *m = BucketListResponse{} }
func (m *BucketListResponse) String() string { return proto.CompactTextString(m) }
func (*BucketListResponse) ProtoMessage()    {}
func (*BucketListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d6a2cff6c84df7e, []int{5}
}

func (m *BucketListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BucketListResponse.Unmarshal(m, b)
}
func (m *BucketListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BucketListResponse.Marshal(b, m, deterministic)
}
func (m *BucketListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BucketListResponse.Merge(m, src)
}
func (m *BucketListResponse) XXX_Size() int {
	return xxx_messageInfo_BucketListResponse.Size(m)
}
func (m *BucketListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BucketListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BucketListResponse proto.InternalMessageInfo

func (m *BucketListResponse) GetInfo() map[string]*BucketInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type TenantListRequest struct {
	Cluster              string   `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Pattern              string   `protobuf:"bytes,2,opt,name=pattern,proto3" json:"pattern,omitempty"`
	Count                int32    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TenantListRequest) Reset()         { *m = TenantListRequest{} }
func (m *TenantListRequest) String() string { return proto.CompactTextString(m) }
func (*TenantListRequest) ProtoMessage()    {}
func (*TenantListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d6a2cff6c84df7e, []int{6}
}

func (m *TenantListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TenantListRequest.Unmarshal(m, b)
}
func (m *TenantListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TenantListRequest.Marshal(b, m, deterministic)
}
func (m *TenantListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TenantListRequest.Merge(m, src)
}
func (m *TenantListRequest) XXX_Size() int {
	return xxx_messageInfo_TenantListRequest.Size(m)
}
func (m *TenantListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TenantListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TenantListRequest proto.InternalMessageInfo

func (m *TenantListRequest) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *TenantListRequest) GetPattern() string {
	if m != nil {
		return m.Pattern
	}
	return ""
}

func (m *TenantListRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type TenantInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TenantInfo) Reset()         { *m = TenantInfo{} }
func (m *TenantInfo) String() string { return proto.CompactTextString(m) }
func (*TenantInfo) ProtoMessage()    {}
func (*TenantInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d6a2cff6c84df7e, []int{7}
}

func (m *TenantInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TenantInfo.Unmarshal(m, b)
}
func (m *TenantInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TenantInfo.Marshal(b, m, deterministic)
}
func (m *TenantInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TenantInfo.Merge(m, src)
}
func (m *TenantInfo) XXX_Size() int {
	return xxx_messageInfo_TenantInfo.Size(m)
}
func (m *TenantInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TenantInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TenantInfo proto.InternalMessageInfo

func (m *TenantInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type TenantListResponse struct {
	Info                 map[string]*TenantInfo `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TenantListResponse) Reset()         { *m = TenantListResponse{} }
func (m *TenantListResponse) String() string { return proto.CompactTextString(m) }
func (*TenantListResponse) ProtoMessage()    {}
func (*TenantListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d6a2cff6c84df7e, []int{8}
}

func (m *TenantListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TenantListResponse.Unmarshal(m, b)
}
func (m *TenantListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TenantListResponse.Marshal(b, m, deterministic)
}
func (m *TenantListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TenantListResponse.Merge(m, src)
}
func (m *TenantListResponse) XXX_Size() int {
	return xxx_messageInfo_TenantListResponse.Size(m)
}
func (m *TenantListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TenantListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TenantListResponse proto.InternalMessageInfo

func (m *TenantListResponse) GetInfo() map[string]*TenantInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*GenericResponse)(nil), "tenant.GenericResponse")
	proto.RegisterType((*BucketCreateRequest)(nil), "tenant.BucketCreateRequest")
	proto.RegisterMapType((map[string]string)(nil), "tenant.BucketCreateRequest.OptionsEntry")
	proto.RegisterType((*BucketDeleteRequest)(nil), "tenant.BucketDeleteRequest")
	proto.RegisterType((*BucketListRequest)(nil), "tenant.BucketListRequest")
	proto.RegisterType((*BucketInfo)(nil), "tenant.BucketInfo")
	proto.RegisterType((*BucketListResponse)(nil), "tenant.BucketListResponse")
	proto.RegisterMapType((map[string]*BucketInfo)(nil), "tenant.BucketListResponse.InfoEntry")
	proto.RegisterType((*TenantListRequest)(nil), "tenant.TenantListRequest")
	proto.RegisterType((*TenantInfo)(nil), "tenant.TenantInfo")
	proto.RegisterType((*TenantListResponse)(nil), "tenant.TenantListResponse")
	proto.RegisterMapType((map[string]*TenantInfo)(nil), "tenant.TenantListResponse.InfoEntry")
}

func init() { proto.RegisterFile("tenant.proto", fileDescriptor_3d6a2cff6c84df7e) }

var fileDescriptor_3d6a2cff6c84df7e = []byte{
	// 427 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0x4f, 0xeb, 0xd3, 0x40,
	0x10, 0xed, 0x36, 0x69, 0x4a, 0xa7, 0x05, 0xed, 0x2a, 0xba, 0xc6, 0x4b, 0x58, 0x3c, 0xe4, 0x94,
	0x43, 0xbc, 0x94, 0x1e, 0xab, 0x55, 0x44, 0xa1, 0x10, 0xbc, 0x8a, 0xa4, 0x61, 0x0a, 0xa1, 0x75,
	0x37, 0x26, 0x1b, 0xa1, 0x9f, 0xc5, 0x0f, 0xd7, 0xaf, 0x22, 0xc9, 0x26, 0x66, 0xfb, 0x2f, 0x88,
	0xfc, 0x7e, 0xb7, 0xbc, 0x9d, 0xdd, 0x37, 0x33, 0xef, 0xcd, 0x04, 0x66, 0x0a, 0x45, 0x2c, 0x54,
	0x90, 0xe5, 0x52, 0x49, 0xea, 0x68, 0xc4, 0xe7, 0xf0, 0xe4, 0x23, 0x0a, 0xcc, 0xd3, 0x24, 0xc2,
	0x22, 0x93, 0xa2, 0x40, 0x7e, 0x22, 0xf0, 0x6c, 0x55, 0x26, 0x7b, 0x54, 0xef, 0x72, 0x8c, 0x15,
	0x46, 0xf8, 0xb3, 0xc4, 0x42, 0x51, 0x06, 0xe3, 0xe4, 0x50, 0x16, 0x0a, 0x73, 0x46, 0x3c, 0xe2,
	0x4f, 0xa2, 0x16, 0xd2, 0x17, 0xd0, 0xd0, 0xb1, 0x61, 0x1d, 0x68, 0x50, 0x75, 0xbe, 0xad, 0x89,
	0x98, 0xa5, 0xcf, 0x35, 0xa2, 0x2b, 0x18, 0xcb, 0x4c, 0xa5, 0x52, 0x14, 0xcc, 0xf6, 0x2c, 0x7f,
	0x1a, 0xfa, 0x41, 0x53, 0xdc, 0x8d, 0xbc, 0xc1, 0x46, 0x5f, 0x5d, 0x0b, 0x95, 0x1f, 0xa3, 0xf6,
	0xa1, 0xbb, 0x84, 0x99, 0x19, 0xa0, 0x4f, 0xc1, 0xda, 0xe3, 0xb1, 0xa9, 0xac, 0xfa, 0xa4, 0xcf,
	0x61, 0xf4, 0x2b, 0x3e, 0x94, 0xd8, 0x14, 0xa5, 0xc1, 0x72, 0xb8, 0x20, 0xfc, 0x7b, 0xdb, 0xe0,
	0x7b, 0x3c, 0xe0, 0x23, 0x34, 0xc8, 0x4b, 0x98, 0xeb, 0x04, 0x5f, 0xd2, 0x42, 0xfd, 0x3f, 0x3d,
	0x83, 0x71, 0x16, 0x2b, 0x85, 0xb9, 0x68, 0xf8, 0x5b, 0x58, 0xf5, 0x96, 0xc8, 0x52, 0x28, 0x66,
	0x7b, 0xc4, 0x1f, 0x45, 0x1a, 0x70, 0x0f, 0x40, 0xa7, 0xfd, 0x24, 0x76, 0x92, 0x52, 0xb0, 0x45,
	0xfc, 0x03, 0x9b, 0x64, 0xf5, 0x37, 0xff, 0x4d, 0x80, 0x9a, 0x95, 0x69, 0xcb, 0xe9, 0x02, 0xec,
	0x54, 0xec, 0x24, 0x23, 0xb5, 0x1b, 0x6f, 0xce, 0xdd, 0x30, 0x6f, 0x06, 0x15, 0xb3, 0x76, 0xa2,
	0x7e, 0xe1, 0x7e, 0x86, 0xc9, 0xdf, 0xa3, 0x1b, 0x1e, 0xf8, 0xa6, 0x07, 0xd3, 0x90, 0x9e, 0x33,
	0x57, 0x2f, 0x4d, 0x5f, 0xbe, 0xc1, 0xfc, 0x6b, 0x1d, 0xff, 0x37, 0xd9, 0x0c, 0x79, 0x86, 0x77,
	0xe4, 0xb1, 0x2e, 0xe4, 0xd1, 0xf4, 0xbd, 0xf2, 0x98, 0x15, 0xf4, 0xcb, 0x73, 0x7d, 0xf3, 0xa1,
	0xe4, 0xe9, 0xca, 0x34, 0xe4, 0x09, 0x4f, 0x04, 0x1c, 0x2d, 0x1c, 0xfd, 0x00, 0x33, 0x73, 0x55,
	0xe8, 0xeb, 0x9e, 0x05, 0x72, 0x5f, 0xb6, 0xc1, 0xcb, 0x4d, 0x1f, 0x74, 0x3c, 0x7a, 0x13, 0x2e,
	0x79, 0xce, 0xf6, 0xa3, 0x8f, 0x67, 0xdd, 0x4e, 0x5e, 0xa5, 0x06, 0x7d, 0x75, 0x6b, 0x80, 0x34,
	0x87, 0x7b, 0x7f, 0xb6, 0xf8, 0x20, 0xdc, 0x80, 0xa3, 0x5b, 0xaf, 0x08, 0x3b, 0x79, 0x3b, 0xc2,
	0xab, 0xf1, 0xe8, 0x08, 0xaf, 0xdd, 0xe0, 0x83, 0xad, 0x53, 0xff, 0xed, 0xde, 0xfe, 0x09, 0x00,
	0x00, 0xff, 0xff, 0x66, 0x7f, 0x1c, 0x95, 0xfd, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BucketClient is the client API for Bucket service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BucketClient interface {
	BucketCreate(ctx context.Context, in *BucketCreateRequest, opts ...grpc.CallOption) (*GenericResponse, error)
	BucketDelete(ctx context.Context, in *BucketDeleteRequest, opts ...grpc.CallOption) (*GenericResponse, error)
	BucketList(ctx context.Context, in *BucketListRequest, opts ...grpc.CallOption) (*BucketListResponse, error)
}

type bucketClient struct {
	cc *grpc.ClientConn
}

func NewBucketClient(cc *grpc.ClientConn) BucketClient {
	return &bucketClient{cc}
}

func (c *bucketClient) BucketCreate(ctx context.Context, in *BucketCreateRequest, opts ...grpc.CallOption) (*GenericResponse, error) {
	out := new(GenericResponse)
	err := c.cc.Invoke(ctx, "/tenant.Bucket/BucketCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bucketClient) BucketDelete(ctx context.Context, in *BucketDeleteRequest, opts ...grpc.CallOption) (*GenericResponse, error) {
	out := new(GenericResponse)
	err := c.cc.Invoke(ctx, "/tenant.Bucket/BucketDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bucketClient) BucketList(ctx context.Context, in *BucketListRequest, opts ...grpc.CallOption) (*BucketListResponse, error) {
	out := new(BucketListResponse)
	err := c.cc.Invoke(ctx, "/tenant.Bucket/BucketList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BucketServer is the server API for Bucket service.
type BucketServer interface {
	BucketCreate(context.Context, *BucketCreateRequest) (*GenericResponse, error)
	BucketDelete(context.Context, *BucketDeleteRequest) (*GenericResponse, error)
	BucketList(context.Context, *BucketListRequest) (*BucketListResponse, error)
}

func RegisterBucketServer(s *grpc.Server, srv BucketServer) {
	s.RegisterService(&_Bucket_serviceDesc, srv)
}

func _Bucket_BucketCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BucketCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BucketServer).BucketCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tenant.Bucket/BucketCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BucketServer).BucketCreate(ctx, req.(*BucketCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bucket_BucketDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BucketDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BucketServer).BucketDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tenant.Bucket/BucketDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BucketServer).BucketDelete(ctx, req.(*BucketDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bucket_BucketList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BucketListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BucketServer).BucketList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tenant.Bucket/BucketList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BucketServer).BucketList(ctx, req.(*BucketListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Bucket_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tenant.Bucket",
	HandlerType: (*BucketServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BucketCreate",
			Handler:    _Bucket_BucketCreate_Handler,
		},
		{
			MethodName: "BucketDelete",
			Handler:    _Bucket_BucketDelete_Handler,
		},
		{
			MethodName: "BucketList",
			Handler:    _Bucket_BucketList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tenant.proto",
}

// TenantClient is the client API for Tenant service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TenantClient interface {
	TenantList(ctx context.Context, in *TenantListRequest, opts ...grpc.CallOption) (*TenantListResponse, error)
}

type tenantClient struct {
	cc *grpc.ClientConn
}

func NewTenantClient(cc *grpc.ClientConn) TenantClient {
	return &tenantClient{cc}
}

func (c *tenantClient) TenantList(ctx context.Context, in *TenantListRequest, opts ...grpc.CallOption) (*TenantListResponse, error) {
	out := new(TenantListResponse)
	err := c.cc.Invoke(ctx, "/tenant.Tenant/TenantList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TenantServer is the server API for Tenant service.
type TenantServer interface {
	TenantList(context.Context, *TenantListRequest) (*TenantListResponse, error)
}

func RegisterTenantServer(s *grpc.Server, srv TenantServer) {
	s.RegisterService(&_Tenant_serviceDesc, srv)
}

func _Tenant_TenantList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TenantListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantServer).TenantList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tenant.Tenant/TenantList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantServer).TenantList(ctx, req.(*TenantListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Tenant_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tenant.Tenant",
	HandlerType: (*TenantServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TenantList",
			Handler:    _Tenant_TenantList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tenant.proto",
}
